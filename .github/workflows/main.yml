name: Gradvek CI/CD

on:
  workflow_dispatch:
    inputs:
      NON_MASTER_DEPLOY:
        description: 'Deploy from worflow dispatch'
        required: false
        default: 'true'

  push:
    branches:
      - '**'

  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["backend", "frontend"]
        arch: ["amd64", "arm64"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker images
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.service }}
          target: develop
          platform: linux/${{ matrix.arch }}

  publish:
    if: github.event_name == 'pull_request' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["backend", "frontend"]
        arch: ["amd64", "arm64"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.service }}
          push: true
          platforms: linux/${{ matrix.arch }}
          tags: your-dockerhub-username/your-repo-name:${{ matrix.service }}-${{ github.sha }}-${{ matrix.arch }}
          target: production

  # deploy:
  #   if: github.event_name == 'pull_request' && github.ref == 'refs/heads/main'
  #   needs: publish
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-west-2

  #     # Add AWS deployment steps here
  #     # Make sure you have the required configurations and credentials
