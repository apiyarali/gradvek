name: Gradvek CI/CD

on:
  workflow_dispatch:
    inputs:
      NON_MASTER_DEPLOY:
        description: 'Deploy from workflow dispatch'
        required: false
        default: 'true'
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ns_dockerhub
    strategy:
      matrix:
        service: ["backend", "frontend"]
        arch: ["amd64", "arm64"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: |
            /tmp/buildx_cache
            ~/.docker
          key: ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.service }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.service }}
            ${{ runner.os }}-${{ matrix.arch }}
            ${{ runner.os }}-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up nodejs environment
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install npm dependencies
        run: npm install
        working-directory: ./frontend

      - name: Set up Python environment
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
          cache: "pip"
          cache-dependency-path: "./backend/requirements.txt"

      - name: Install pip dependencies
        run: pip install -r requirements.txt
        working-directory: ./backend

      - name: Build Docker images
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.service }}
          platforms: linux/${{ matrix.arch }}
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gradvek-${{ matrix.service }}:${{ matrix.arch }}-${{ github.sha }}
          cache-to: type=inline,dest=/tmp/buildx_cache

      - name: Save Buildx cache
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: buildx_cache
          path: /tmp/buildx_cache

  publish:
    if: github.event_name == 'pull_request' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment: ns_dockerhub
    strategy:
      matrix:
        service: ["backend", "frontend"]
        arch: ["amd64", "arm64"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gradvek-${{ matrix.service }}:${{ matrix.arch }}-${{ github.sha }}
          cache-from: type=local,src=/tmp/buildx_cache


  # deploy:
  #   if: github.event_name == 'pull_request' && github.ref == 'refs/heads/main'
  #   needs: publish
  #   runs-on: ubuntu-latest
  #   environment: ns_dockerhub
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{


