name: Gradvek CI/CD

on:
  workflow_dispatch:
    inputs:
      NON_MASTER_DEPLOY:
        description: 'Deply from dispatch'
        required: false
        default: 'true'
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - 'main'

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["backend", "frontend", "neo4j"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and test Docker images
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.service }}
          target: test

  publish:
    if: github.event_name == 'pull_request' && github.ref == 'refs/heads/main'
    needs: build-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["backend", "frontend", "neo4j"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.service }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: your-dockerhub-username/your-repo-name:${{ matrix.service }}-${{ github.sha }}
          target: production

  deploy:
    if: github.event_name == 'pull_request' && github.ref == 'refs/heads/main'
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      # Add AWS deployment steps here
      # Make sure you have the required configurations and credentials
